corrplot(cor(train_PG_adv[,]), method="number", number.cex = 0.8)
lm1_reg = lm(log(train_PG_reg$Salary)~.,train_PG_reg)
summary(lm1_reg)
plot(lm1_reg)
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
train_PG_reg %>%  filter(!row_number() %in% c(238, 300, 913, 983, 992, 1025))
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
#influencePlot(lm1_reg)
train_PG_reg %>%  filter(!row_number() %in% c(238, 300, 913, 983, 992, 1025))
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
train_PG_reg %>%  filter(!row_number() %in% c(238, 300, 913, 983, 992, 1025))
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
train_PG_reg %>%  filter(!row_number() %in% c(300, 913, 983, 992, 1025))
lm2_reg = lm(log(train_PG_reg$Salary)~.,train_PG_reg)
summary(lm2_reg)
plot(lm2_reg)
train_PG_reg
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
train_PG_reg <- train_PG_reg %>%  filter(!row_number() %in% c(300, 913, 983, 992, 1025))
lm2_reg = lm(log(train_PG_reg$Salary)~.,train_PG_reg)
summary(lm2_reg)
plot(lm2_reg)
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg)
rs = summary(b)
plot(2:9,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg)
rs = summary(b)
plot(2:15,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg)
rs = summary(b)
rs$cp
plot(2:15,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg)
rs = summary(b)
plot(1:9,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
#step(lm2)
#lm3 = lm(log(salary)~Age+FT.+MPG,train2)
#summary(lm3)
#plot(lm3)
rs
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg, nvmax=15)
rs = summary(b)
rs
plot(1:9,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg, nvmax=15)
rs = summary(b)
rs
plot(1:15,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg, nvmax=17)
rs = summary(b)
rs
plot(1:15,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:15,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:13,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
#step(lm2)
#lm3 = lm(log(salary)~Age+FT.+MPG,train2)
#summary(lm3)
#plot(lm3)
rs$which[which.min(rs$cp),]
lm1_reg = lm(log(train_PG_reg$Salary)~.-(ORPG + DRPG),train_PG_reg)
summary(lm1_reg)
plot(lm1_reg)
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
train_PG_reg <- train_PG_reg %>%  filter(!row_number() %in% c(300, 913, 983, 992, 1025))
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
train_PG_reg <- train_PG_reg %>%  filter(!row_number() %in% c(238, 284, 438, 565, 590))
lm2_reg = lm(log(train_PG_reg$Salary)~.,train_PG_reg)
summary(lm2_reg)
plot(lm2_reg)
lm1_reg = lm(log(train_PG_reg$Salary)~.-(ORPG + DRPG),train_PG_reg)
summary(lm1_reg)
plot(lm1_reg)
lm2_reg = lm(log(train_PG_reg$Salary)~.-(ORPG + DRPG),train_PG_reg)
summary(lm2_reg)
plot(lm2_reg)
lm2_reg = lm(log(train_PG_reg$Salary)~.-(ORPG + DRPG),train_PG_reg)
summary(lm2_reg)
plot(lm2_reg)
train_PG_reg
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(reticulate)
use_python("/usr/local/bin/python3")
# NBA data from 1995-2017
big_data <- read_excel('data.xlsx')
big_data <- big_data[big_data[,"GP"] >= 30,]
head(big_data)
# data <- read.csv(file = 'final_dataset2.csv')
# data = data[data[,"G"] >= 30,]      #screen out less statistically significant data points
# data = data[data[,"Age"] >= 22,]    #salary cap
# data_reduced = data[,c('X','Player', 'Pos', 'salary','Age','FG.','FT.','MPG','PPG','APG','RPG','TOPG','BPG','SPG')]
# data_reduced = data_reduced[-c(which(data_reduced$Pos == "SF-SG")),]
set.seed(1234)
# shuffle = sample.int(nrow(data_reduced))
# data_reduced$split = cut(shuffle, breaks = 5, labels = c("1","2","3","4","test"))
# train = subset(data_reduced, split != "test", select = -split)
# test = subset(data_reduced, split == "test", select = -split)
# data_reduced = subset(data_reduced, select = -split)
shuffle = sample.int(nrow(big_data))
big_data$split = cut(shuffle, breaks = 5, labels = c("1", "2", "3", "4", "test"))
train1 = subset(big_data, split != "test", select = -split)
test1 = subset(big_data, split == "test", select = -split)
advanced_train <- train1[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
advanced_train
regular_train <- train1[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
advanced_test <- test1[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
regular_test <- test1[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
# par(mfrow=c(1,3))
# hist(train$salary,freq = F, main = "Salary", xlab = "Salary")
# hist(log(train$salary),freq = F, main = "Log of Salary", xlab = "Log of Salary")
# hist(sqrt(train$salary),freq = F, main = "Square Root of Salary", xlab = "Square Root of Salary of Salary")
par(mfrow=c(1, 3))
hist(train1$`Salary`,freq = F, main = "Salary", xlab = "%Salary")
hist(log(train1$`Salary`),freq = F, main = "Log of Salary", xlab = "Log of Salary")
hist(sqrt(train1$`Salary`),freq = F, main = "Square Root of Salary", xlab = "Square Root of Salary")
# model1 = lm(salary~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
# summary(model1)
# plot(model1)
# total_model = lm(`% of Cap`~.-(Name + Team + Season), data = big_data)
# summary(total_model)
regular_stats_model = lm(`Salary`~. , data = regular_train)
summary(regular_stats_model)
plot(regular_stats_model)
advanced_stats_model = lm(`Salary`~., data= advanced_train)
summary(advanced_stats_model)
plot(advanced_stats_model)
# model2 = lm(log(salary)~ Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
# summary(model2)
# plot(model2)
regular_stats_model.log = lm(log(`Salary`)~. , data = regular_train)
summary(regular_stats_model.log)
plot(regular_stats_model.log)
advanced_stats_model.log = lm(log(`Salary`)~., data= advanced_train)
summary(advanced_stats_model.log)
# model3 = lm(sqrt(salary)~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
# summary(model3)
# plot(model3)
regular_stats_model.sqrt = lm(sqrt(`Salary`)~. , data = regular_train)
summary(regular_stats_model.sqrt)
advanced_stats_model.sqrt = lm(sqrt(`Salary`)~., data= advanced_train)
summary(advanced_stats_model.sqrt)
train_PG =train1[train1$Pos == 1,]
train_PF=train1[train1$Pos == 2, ]
train_SF = train1[train1$Pos == 3, ]
train_C = train1[train1$Pos == 4, ]
train_SG = train1[train1$Pos == 5, ]
test_PG =  test1[test1$Pos == 1, ]
test_PF =  test1[test1$Pos == 2, ]
test_PF
test_SF =  test1[test1$Pos == 3, ]
test_C = test1[test1$Pos == 5, ]
test_SG = test1[test1$Pos == 4, ]
#Regular
train_PG_reg <- train_PG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_SG_reg <- train_SG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_SF_reg <- train_SF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_PF_reg <- train_PF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_C_reg <- train_C[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_PG_reg <- test_PG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_SG_reg <- test_SG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_SF_reg <- test_SF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_PF_reg <- test_PF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_C_reg <- test_C[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
#Advanced
train_PG_adv <- train_PG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_SG_adv <- train_SG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_SF_adv <- train_SF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_PF_adv <- train_PF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_C_adv <- train_C[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_PG_adv <- test_PG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_SG_adv <- test_SG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_SF_adv <- test_SF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_PF_adv <- test_PF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_C_adv <- test_C[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_PG =train1[train1$Pos == 1,]
train_PF=train1[train1$Pos == 2, ]
train_SF = train1[train1$Pos == 3, ]
train_C = train1[train1$Pos == 4, ]
train_SG = train1[train1$Pos == 5, ]
test_PG =  test1[test1$Pos == 1, ]
test_PF =  test1[test1$Pos == 2, ]
test_SF =  test1[test1$Pos == 3, ]
test_C = test1[test1$Pos == 5, ]
test_SG = test1[test1$Pos == 4, ]
#Regular
train_PG_reg <- train_PG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_SG_reg <- train_SG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_SF_reg <- train_SF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_PF_reg <- train_PF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_C_reg <- train_C[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_PG_reg <- test_PG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_SG_reg <- test_SG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_SF_reg <- test_SF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_PF_reg <- test_PF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_C_reg <- test_C[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
#Advanced
train_PG_adv <- train_PG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_SG_adv <- train_SG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_SF_adv <- train_SF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_PF_adv <- train_PF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_C_adv <- train_C[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_PG_adv <- test_PG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_SG_adv <- test_SG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_SF_adv <- test_SF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_PF_adv <- test_PF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_C_adv <- test_C[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
library(corrplot)
corrplot(cor(train_PG_reg[,-c(2, 3)]), method = 'number', number.cex = 0.8)
corrplot(cor(train_PG_adv[,]), method="number", number.cex = 0.8)
par(mfrow=c(2,3))
hist(train_PG$Age,freq = F, main = "Histogram of Age", xlab= "Age")
hist(train_PG$FG.,freq = F, main = "Histogram of Filed Goals per Game", xlab= "Filed Goals per Game")
lm1_reg = lm(log(train_PG_reg$Salary)~.-(ORPG + DRPG),train_PG_reg)
summary(lm1_reg)
plot(lm1_reg)
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
train_PG_reg <- train_PG_reg %>%  filter(!row_number() %in% c(238, 284, 438, 565, 590))
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
#train_PG_reg <- train_PG_reg %>%  filter(!row_number() %in% c(238, 284, 438, 565, 590))
train_PG =train1[train1$Pos == 1,]
train_PF=train1[train1$Pos == 2, ]
train_SF = train1[train1$Pos == 3, ]
train_C = train1[train1$Pos == 4, ]
train_SG = train1[train1$Pos == 5, ]
test_PG =  test1[test1$Pos == 1, ]
test_PF =  test1[test1$Pos == 2, ]
test_SF =  test1[test1$Pos == 3, ]
test_C = test1[test1$Pos == 5, ]
test_SG = test1[test1$Pos == 4, ]
#Regular
train_PG_reg <- train_PG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_SG_reg <- train_SG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_SF_reg <- train_SF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_PF_reg <- train_PF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
train_C_reg <- train_C[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_PG_reg <- test_PG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_SG_reg <- test_SG[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_SF_reg <- test_SF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_PF_reg <- test_PF[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
test_C_reg <- test_C[,c('Salary','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
#Advanced
train_PG_adv <- train_PG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_SG_adv <- train_SG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_SF_adv <- train_SF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_PF_adv <- train_PF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
train_C_adv <- train_C[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_PG_adv <- test_PG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_SG_adv <- test_SG[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_SF_adv <- test_SF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_PF_adv <- test_PF[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
test_C_adv <- test_C[,c('Salary','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
library(corrplot)
corrplot(cor(train_PG_reg[,-c(2, 3)]), method = 'number', number.cex = 0.8)
corrplot(cor(train_PG_adv[,]), method="number", number.cex = 0.8)
lm1_reg = lm(log(train_PG_reg$Salary)~.-(ORPG + DRPG),train_PG_reg)
summary(lm1_reg)
plot(lm1_reg)
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
#train_PG_reg <- train_PG_reg %>%  filter(!row_number() %in% c(238, 284, 438, 565, 590))
library(car)
library(magrittr)
library(dplyr)
outlierTest(lm1_reg)
influencePlot(lm1_reg)
train_PG_reg <- train_PG_reg %>%  filter(!row_number() %in% c(300, 913, 983, 992, 1025))
lm2_reg = lm(log(train_PG_reg$Salary)~.-(ORPG + DRPG),train_PG_reg)
summary(lm2_reg)
plot(lm2_reg)
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~., data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:13,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
#step(lm2)
#lm3 = lm(log(salary)~Age+FT.+MPG,train2)
#summary(lm3)
#plot(lm3)
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:13,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:12,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
#step(lm2)
#lm3 = lm(log(salary)~Age+FT.+MPG,train2)
#summary(lm3)
#plot(lm3)
step(lm2)
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:12,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
#lm3 = lm(log(salary)~Age+FT.+MPG,train2)
#summary(lm3)
#plot(lm3)
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:12,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
lm3 = lm(log(Salary)~RPG+APG+SPG+BPG+TPG+3PAPG+2PPG+FTPG+FTAPG, train_PG_reg)
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:12,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
lm3 = lm(log(Salary)~RPG+APG+SPG+BPG+TPG+3PAPG+2PPG+FTPG, FTAPG, train_PG_reg)
lm3 = lm(log(Salary)~RPG+APG+SPG+BPG+TPG+3PAPG+FTPG+FTAPG, train_PG_reg)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:12,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:12,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
lm3 = lm(log(Salary)~RPG+APG+SPG+BPG+TPG+3PAPG+2PPG+FTPG, FTAPG, data=train_PG_reg)
lm3 = lm(log(Salary)~RPG+APG+SPG+BPG+TPG+3PAPG+2FTPG, FTAPG, data=train_PG_reg)
lm3 = lm(log(Salary)~RPG+APG+SPG+BPG+TPG+3PAPG, FTAPG, data=train_PG_reg)
+3PAPG
lm3 = lm(log(Salary)~RPG+APG+SPG+BPG+TPG, FTAPG, data=train_PG_reg)
summary(lm3)
rs$which[which.min(rs$cp),]
library(leaps)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:12,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:12,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
lm3 = lm(log(Salary)~RPG+APG+SPG+BPG+TPG+`3PAPG`+`2PPG`+FTPG+FTAPG, data=train_PG_reg)
summary(lm3)
#lm3 = lm(log(salary)~Age+FT.+MPG,train2)
#summary(lm3)
#plot(lm3)
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(Salary)~.-(ORPG+ DRPG), data = train_PG_reg, nvmax=13)
rs = summary(b)
rs
plot(1:12,rs$cp, ylab = "CP statistic", xlab = "Number of Parameters")
abline(0,1)
rs$which[which.min(rs$cp),]
lm3 = lm(log(Salary)~RPG+APG+SPG+BPG+TPG+`3PAPG`+`2PPG`+FTPG+FTAPG, data=train_PG_reg)
summary(lm3)
plot(lm3)
#lm3 = lm(log(salary)~Age+FT.+MPG,train2)
#summary(lm3)
#plot(lm3)
#no sign of multicollinearity
library(car)
vif(lm3)
vif(lm3)
# model1 = lm(salary~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
# summary(model1)
# plot(model1)
# total_model = lm(`% of Cap`~.-(Name + Team + Season), data = big_data)
# summary(total_model)
regular_stats_model = lm(`Salary`~. , data = regular_train)
summary(regular_stats_model)
plot(regular_stats_model)
vif(regular_stats_model)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(reticulate)
library(corrplot)
use_python("/usr/local/bin/python3")
regular_train
# model1 = lm(salary~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
# summary(model1)
# plot(model1)
# total_model = lm(`% of Cap`~.-(Name + Team + Season), data = big_data)
# summary(total_model)
regular_stats_model = lm(`Salary`~. , data = regular_train)
summary(regular_stats_model)
plot(regular_stats_model)
regular_train
corrplot(cor(regular_train[,], method = 'number', number.cex = 0.8)
# model1 = lm(salary~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
# summary(model1)
# plot(model1)
# total_model = lm(`% of Cap`~.-(Name + Team + Season), data = big_data)
# summary(total_model)
regular_stats_model = lm(`Salary`~. , data = regular_train)
summary(regular_stats_model)
plot(regular_stats_model)
regular_train
corrplot(cor(regular_train[,]), method = 'number', number.cex = 0.8)
corrplot(cor(regular_train[,]), method = 'number', number.cex = 0.5)
#compare rmse for original model and reduced model
rmse=function(x,y){sqrt(mean((x-y)^2))}
rmse(predict(lm2,test_PG),log(test_PG$salary))
#compare rmse for original model and reduced model
rmse=function(x,y){sqrt(mean((x-y)^2))}
rmse(predict(lm2,train_SF),log(train_SF$salary))
corrplot(cor(advanced_train[,], method='number', number.cex=0.5))
corrplot(cor(advanced_train[,]), method='number', number.cex=0.5)
# model1 = lm(salary~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
# summary(model1)
# plot(model1)
# total_model = lm(`% of Cap`~.-(Name + Team + Season), data = big_data)
# summary(total_model)
regular_stats_model = lm(`Salary`~. , data = regular_train)
summary(regular_stats_model)
plot(regular_stats_model)
regular_train
corrplot(cor(regular_train[,]), method = 'number', number.cex = 0.5)
corrplot(cor(advanced_train[,]), method='number', number.cex=0.5)
