data <- read.csv("NBAdata.csv")
data
names(data)[names(data)=="G"] <- "GP"
names(data)[names(data)=="Tm"] <- "Team"
names(data)[names(data)=="Season.Start"] <- "Season"
names(data)[names(data)=="Player.Name"] <- "Name"
names(data)[names(data)=="Player.Salary.in.."] <- "Salary"
data["GS/GP"] <- data["GS"] / data["GP"]
data <- subset(data, select = -c("blank2", "blanl", ))
data <- read.csv("NBAdata.csv")
data
names(data)[names(data)=="G"] <- "GP"
names(data)[names(data)=="Tm"] <- "Team"
names(data)[names(data)=="Season.Start"] <- "Season"
names(data)[names(data)=="Player.Name"] <- "Name"
names(data)[names(data)=="Player.Salary.in.."] <- "Salary"
data["GS/GP"] <- data["GS"] / data["GP"]
data <- subset(data, select = -c("blank2", "blanl", "X"))
data <- read.csv("NBAdata.csv")
data
names(data)[names(data)=="G"] <- "GP"
names(data)[names(data)=="Tm"] <- "Team"
names(data)[names(data)=="Season.Start"] <- "Season"
names(data)[names(data)=="Player.Name"] <- "Name"
names(data)[names(data)=="Player.Salary.in.."] <- "Salary"
data["GS/GP"] <- data["GS"] / data["GP"]
data <- subset(data, select = -c(blank2, blanl, X))
data <- read.csv("NBAdata.csv")
data
names(data)[names(data)=="G"] <- "GP"
names(data)[names(data)=="Tm"] <- "Team"
names(data)[names(data)=="Season.Start"] <- "Season"
names(data)[names(data)=="Player.Name"] <- "Name"
names(data)[names(data)=="Player.Salary.in.."] <- "Salary"
data["GS/GP"] <- data["GS"] / data["GP"]
data <- subset(data, select = -c(blank2, blanl))
data <- read.csv("NBAdata.csv")
data
names(data)[names(data)=="G"] <- "GP"
names(data)[names(data)=="Tm"] <- "Team"
names(data)[names(data)=="Season.Start"] <- "Season"
names(data)[names(data)=="Player.Name"] <- "Name"
names(data)[names(data)=="Player.Salary.in.."] <- "Salary"
data["GS/GP"] <- data["GS"] / data["GP"]
data <- subset(data, select = -c(blank2, blanl))
data
knitr::opts_chunk$set(echo = TRUE)
data <- read.table(pipe("pbpaste"), sep="\t", header=TRUE)
data
knitr::opts_chunk$set(echo = TRUE)
data <- read.table(pipe("pbpaste"), sep="\t", header=TRUE)
data
install.packages("readxl")
library("readxl")
data <- read_excel("data.xlxs")
install.packages("readxl")
library("readxl")
data <- read_excel("data.xlsx")
data
data[7433]
data[,7433]
data[,7000]
data[7000,]
data[7433,,]
data[7433,]
data[7434,]
data[7435,]
data[74356,]
data[8000,]
data
data[,7433]
data[7433,]
install.packages("readxl")
library("readxl")
data <- read_excel("data.xlsx")
data
install.packages("readxl")
install.packages("readxl")
library("readxl")
data <- read_excel("data.xlsx")
data
knitr::opts_chunk$set(echo = TRUE)
plot(data)
set.seed(1234)
shuffle = sample.int(nrow(data))
data$split = cut(shuffle, breaks=5, labels=c("1", "2", "3", "4", "test"))
train = subset(data, split != "test", select = -split)
test = subset(data, split == "test", select = -split)
data = subset(data, select = -split)
hist(data$`% of Cap`)
hist(data$`% of Cap`)
hist(sqrt(data$`% of Cap`))
plot(data$Age, data$`% of Cap`)
plot(data$`% of Cap`, data$Age)
View(data_reduced)
hist(data$`% of Cap`)
hist(data$`% of Cap`)
hist(sqrt(data$`% of Cap`))
par(mfrow=c(3, 4))
plot(data$`% of Cap`, data$Age)
plot(data$`% of Cap`, data$FGPG)
plot(data$`% of Cap`, data$FTPG.)
plot(data$`% of Cap`, data$MPG)
plot(data$`% of Cap`, data$PPG)
plot(data$`% of Cap`, data$APG)
plot(data$`% of Cap`, data$RPG)
plot(data$`% of Cap`, data$TPG)
plot(data$`% of Cap`, data$BPG)
plot(data$`% of Cap`, data$SPG)
par(mfrow=c(3, 4))
plot(data$`% of Cap`, data$Age)
plot(data$`% of Cap`, data$FGPG)
plot(data$`% of Cap`, data$FTPG)
plot(data$`% of Cap`, data$MPG)
plot(data$`% of Cap`, data$PPG)
plot(data$`% of Cap`, data$APG)
plot(data$`% of Cap`, data$RPG)
plot(data$`% of Cap`, data$TPG)
plot(data$`% of Cap`, data$BPG)
plot(data$`% of Cap`, data$SPG)
par(mfrow=c(3, 4))
plot(data$`% of Cap`, data$Age, ylab="Age")
plot(data$`% of Cap`, data$FGPG)
plot(data$`% of Cap`, data$FTPG)
plot(data$`% of Cap`, data$MPG)
plot(data$`% of Cap`, data$PPG)
plot(data$`% of Cap`, data$APG)
plot(data$`% of Cap`, data$RPG)
plot(data$`% of Cap`, data$TPG)
plot(data$`% of Cap`, data$BPG)
plot(data$`% of Cap`, data$SPG)
par(mfrow=c(1,3))
hist(data$`% of Cap`,freq = F)
hist(log(data$`% of Cap`),freq = F)
hist(sqrt(data$`% of Cap`),freq = F)
model1 = lm(`% of Cap`~Age+FGPG.+FTPG.+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = data)
model2 = lm(log(`% of Cap`)~ Age+FGPG.+FTPG.+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = data_reduced)
model1 = lm(`% of Cap`~Age+FGPG+FTPG+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = data)
summary(model1)
plot(model1)
model2 = lm(log(`% of Cap`)~ Age+FGPG+FTPG+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = data_reduced)
model2 = lm(log(`% of Cap`)~ Age+FGPG+FTPG+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = data)
summary(model2)
plot(model2)
model3 = lm(sqrt(`% of Cap`)~Age+FGPG+FTPG+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = data)
summary(model3)
plot(model3)
par(mfrow=c(3, 4))
plot(data$`% of Cap`, data$Age, ylab="Age")
plot(data$`% of Cap`, data$FGPG, ylab="FG Per Game")
plot(data$`% of Cap`, data$FTPG, ylab="FT Per Game")
plot(data$`% of Cap`, data$MPG, ylab="Minutes Per Game")
plot(data$`% of Cap`, data$PPG, ylab="Points Per Game")
plot(data$`% of Cap`, data$APG, ylab="Assists Per Game")
plot(data$`% of Cap`, data$RPG, ylab="Rebounds Per Game")
plot(data$`% of Cap`, data$TPG, ylab="Turnovers Per GAme")
plot(data$`% of Cap`, data$BPG, ylab="Blocks Per Game")
plot(data$`% of Cap`, data$SPG, ylab="Steals Per Game")
par(mfrow=c(3, 4))
plot(data$`% of Cap`, data$Age, ylab="Age", xlab="% of Cap")
plot(data$`% of Cap`, data$FGPG, ylab="FG Per Game", xlab="% of Cap")
plot(data$`% of Cap`, data$FTPG, ylab="FT Per Game", xlab="% of Cap")
plot(data$`% of Cap`, data$MPG, ylab="Minutes Per Game", xlab="% of Cap")
plot(data$`% of Cap`, data$PPG, ylab="Points Per Game", xlab="% of Cap")
plot(data$`% of Cap`, data$APG, ylab="Assists Per Game", xlab="% of Cap")
plot(data$`% of Cap`, data$RPG, ylab="Rebounds Per Game", xlab="% of Cap")
plot(data$`% of Cap`, data$TPG, ylab="Turnovers Per Game", xlab="% of Cap")
plot(data$`% of Cap`, data$SPG, ylab="Steals Per Game", xlab="% of Cap")
par(mfrow=c(3,4))
hist(data$Age,freq = F)
hist(data$FGPG,freq = F)
hist(data$FTPG,freq = F)
hist(data$MPG,freq = F)
hist(data$PPG,freq = F)
hist(data$APG,freq = F)
hist(data$RPG,freq = F)
hist(data$TOPG,freq = F)
par(mfrow=c(3,4))
hist(data$Age,freq = F)
hist(data$FGPG,freq = F)
hist(data$FTPG,freq = F)
hist(data$MPG,freq = F)
hist(data$PPG,freq = F)
hist(data$APG,freq = F)
hist(data$RPG,freq = F)
hist(data$TPG,freq = F)
hist(data$BPG,freq = F)
hist(data$SPG,freq = F)
par(mfrow=c(1,3))
hist(data$`% of Cap`,freq = F)
hist(log(data$`% of Cap`),freq = F)
hist(sqrt(data$`% of Cap`),freq = F)
model2 = lm(log(`% of Cap`)~ Age+FGPG+FTPG+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = train)
summary(model2)
plot(model2)
model1 = lm(`% of Cap`~Age+FGPG+FTPG+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = train)
summary(model1)
plot(model1)
model2 = lm(log(`% of Cap`)~ Age+FGPG+FTPG+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = train)
summary(model2)
plot(model2)
model3 = lm(sqrt(`% of Cap`)~Age+FGPG+FTPG+MPG+PPG+APG+RPG+TPG+BPG+SPG, data = data)
summary(model3)
plot(model3)
plot(model1$model)
library("readxl")
data <- read_excel("data.xlsx")
data
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv(file = 'final_dataset2.csv')
data = data[data[,"G"] >= 30,]      #screen out less statistically significant data points
data = data[data[,"Age"] >= 22,]    #salary cap
data_reduced = data[,c('X','Player', 'Pos', 'salary','Age','FG.','FT.','MPG','PPG','APG','RPG','TOPG','BPG','SPG')]
data_reduced = data_reduced[-c(which(data_reduced$Pos == "SF-SG")),]
par(mfrow=c(1,3))
hist(train$salary,freq = F, main = "Histogram of Salary", xlab = "Salary")
set.seed(664)
shuffle = sample.int(nrow(data_reduced))
data_reduced$split = cut(shuffle, breaks = 5, labels = c("1","2","3","4","test"))
train = subset(data_reduced, split != "test", select = -split)
test = subset(data_reduced, split == "test", select = -split)
data_reduced = subset(data_reduced, select = -split)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv(file = 'final_dataset2.csv')
data = data[data[,"G"] >= 30,]      #screen out less statistically significant data points
data = data[data[,"Age"] >= 22,]    #salary cap
data_reduced = data[,c('X','Player', 'Pos', 'salary','Age','FG.','FT.','MPG','PPG','APG','RPG','TOPG','BPG','SPG')]
data_reduced = data_reduced[-c(which(data_reduced$Pos == "SF-SG")),]
set.seed(664)
shuffle = sample.int(nrow(data_reduced))
data_reduced$split = cut(shuffle, breaks = 5, labels = c("1","2","3","4","test"))
train = subset(data_reduced, split != "test", select = -split)
test = subset(data_reduced, split == "test", select = -split)
data_reduced = subset(data_reduced, select = -split)
par(mfrow=c(1,3))
hist(train$salary,freq = F, main = "Histogram of Salary", xlab = "Salary")
hist(log(train$salary),freq = F, main = "Histogram of Log of Salary", xlab = "Log of Salary")
hist(sqrt(train$salary),freq = F, main = "Histogram of Square Root of Salary", xlab = "Square Root of Salary of Salary")
big_data <- read_excel(file = 'data.xlsx')
big_data <- read_excel('data.xlsx')
big_data <- big_data[data[,"G"] >= 30,]
big_data <- read_excel('data.xlsx')
big_data <- big_data[big_data[,"G"] >= 30,]
big_data <- read_excel('data.xlsx')
big_data <- big_data[big_data[,"GP"] >= 30,]
data <- read.csv(file = 'final_dataset2.csv')
data = data[data[,"G"] >= 30,]      #screen out less statistically significant data points
data = data[data[,"Age"] >= 22,]    #salary cap
data_reduced = data[,c('X','Player', 'Pos', 'salary','Age','FG.','FT.','MPG','PPG','APG','RPG','TOPG','BPG','SPG')]
data_reduced = data_reduced[-c(which(data_reduced$Pos == "SF-SG")),]
big_data <- read_excel('data.xlsx')
big_data <- big_data[big_data[,"GP"] >= 30,]
data <- read.csv(file = 'final_dataset2.csv')
data = data[data[,"G"] >= 30,]      #screen out less statistically significant data points
data = data[data[,"Age"] >= 22,]    #salary cap
data_reduced = data[,c('X','Player', 'Pos', 'salary','Age','FG.','FT.','MPG','PPG','APG','RPG','TOPG','BPG','SPG')]
data_reduced = data_reduced[-c(which(data_reduced$Pos == "SF-SG")),]
knitr::opts_chunk$set(echo = TRUE)
big_data
advanced_stats
# NBA data from 1995-2017
big_data <- read_excel('data.xlsx')
knitr::opts_chunk$set(echo = TRUE)
# NBA data from 1995-2017
big_data <- read_excel('data.xlsx')
big_data <- read_excel('data.xlsx')
big_data <- big_data[big_data[,"GP"] >= 30,]
advanced_stats <- big_data[big_data[,c('% of Cap','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]]
library(readxl)
# NBA data from 1995-2017
big_data <- read_excel('data.xlsx')
# NBA data from 1995-2017
big_data <- read_excel('data.xlsx')
big_data <- big_data[big_data[,"GP"] >= 30,]
advanced_stats <- big_data[big_data[,c('% of Cap','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]]
# NBA data from 1995-2017
big_data <- read_excel('data.xlsx')
big_data <- big_data[big_data[,"GP"] >= 30,]
advanced_stats <- big_data[,c('% of Cap','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
regular_stats <- big_data[,c('% of Cap','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
advanced_stats
data <- read.csv(file = 'final_dataset2.csv')
data = data[data[,"G"] >= 30,]      #screen out less statistically significant data points
data = data[data[,"Age"] >= 22,]    #salary cap
data_reduced = data[,c('X','Player', 'Pos', 'salary','Age','FG.','FT.','MPG','PPG','APG','RPG','TOPG','BPG','SPG')]
data_reduced = data_reduced[-c(which(data_reduced$Pos == "SF-SG")),]
data_reduced
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
set.seed(664)
shuffle = sample.int(nrow(data_reduced))
data_reduced$split = cut(shuffle, breaks = 5, labels = c("1","2","3","4","test"))
train = subset(data_reduced, split != "test", select = -split)
test = subset(data_reduced, split == "test", select = -split)
data_reduced = subset(data_reduced, select = -split)
shuffle = sample.int(nrow(big_data))
big_data$split = cut(shuffle, breaks = 5, labels = c("1", "2", "3", "4", "test"))
train = subset(big_data, split != "test", select = -split)
test = subset(big_data, split == "test", select = -split)
advanced_train <- train[,c('% of Cap','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
regular_train <- train[,c('% of Cap','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
advanced_test <- test[,c('% of Cap','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
regular_test <- test[,c('% of Cap','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
set.seed(664)
shuffle = sample.int(nrow(data_reduced))
data_reduced$split = cut(shuffle, breaks = 5, labels = c("1","2","3","4","test"))
train = subset(data_reduced, split != "test", select = -split)
test = subset(data_reduced, split == "test", select = -split)
data_reduced = subset(data_reduced, select = -split)
shuffle = sample.int(nrow(big_data))
big_data$split = cut(shuffle, breaks = 5, labels = c("1", "2", "3", "4", "test"))
train1 = subset(big_data, split != "test", select = -split)
test1 = subset(big_data, split == "test", select = -split)
advanced_train <- train1[,c('% of Cap','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
regular_train <- train1[,c('% of Cap','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
advanced_test <- test1[,c('% of Cap','PER', 'TS%', '3PAr', 'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%', 'USG%', 'OWS', 'DWS', 'WS', 'WS/48', 'OBPM', 'DBPM', 'BPM', 'VORP')]
regular_test <- test1[,c('% of Cap','ORPG', 'DRPG', 'RPG', 'APG', 'SPG', 'BPG', 'TPG', 'PFPG', 'PPG', 'FGPG', 'FGAPG', '3PPG', '3PAPG', '2PPG', '2PAPG', 'FTPG', 'FTAPG')]
par(mfrow=c(1,3))
hist(train$salary,freq = F, main = "Histogram of Salary", xlab = "Salary")
hist(log(train$salary),freq = F, main = "Histogram of Log of Salary", xlab = "Log of Salary")
hist(sqrt(train$salary),freq = F, main = "Histogram of Square Root of Salary", xlab = "Square Root of Salary of Salary")
par(mfrow=c(1, 3))
hist(train1$`% of Cap`,freq = F, main = "Histogram of Salary", xlab = "Salary")
hist(log(train1$`% of Cap`),freq = F, main = "Histogram of Log of Salary", xlab = "Log of Salary")
hist(sqrt(train1$`% of Cap`),freq = F, main = "Histogram of Square Root of Salary", xlab = "Square Root of Salary of Salary")
par(mfrow=c(1,3))
hist(train$salary,freq = F, main = "Histogram of Salary", xlab = "Salary")
hist(log(train$salary),freq = F, main = "Histogram of Log of Salary", xlab = "Log of Salary")
hist(sqrt(train$salary),freq = F, main = "Histogram of Square Root of Salary", xlab = "Square Root of Salary of Salary")
par(mfrow=c(1, 3))
hist(train1$`% of Cap`,freq = F, main = "Histogram of % of Salary Cap", xlab = "% of Salary Cap")
hist(log(train1$`% of Cap`),freq = F, main = "Histogram of Log of % of Salary Cap", xlab = "Log of % of Salary Cap")
hist(sqrt(train1$`% of Cap`),freq = F, main = "Histogram of Square Root of S% of Salary Cap", xlab = "Square Root of % of Salary Cap")
par(mfrow=c(1,3))
hist(train$salary,freq = F, main = "Salary", xlab = "Salary")
hist(log(train$salary),freq = F, main = "Log of Salary", xlab = "Log of Salary")
hist(sqrt(train$salary),freq = F, main = "Square Root of Salary", xlab = "Square Root of Salary of Salary")
par(mfrow=c(1, 3))
hist(train1$`% of Cap`,freq = F, main = "Histogram of % of Salary Cap", xlab = "% of Salary Cap")
hist(log(train1$`% of Cap`),freq = F, main = "Histogram of Log of % of Salary Cap", xlab = "Log of % of Salary Cap")
hist(sqrt(train1$`% of Cap`),freq = F, main = "Histogram of Square Root of S% of Salary Cap", xlab = "Square Root of % of Salary Cap")
par(mfrow=c(1,3))
hist(train$salary,freq = F, main = "Salary", xlab = "Salary")
hist(log(train$salary),freq = F, main = "Log of Salary", xlab = "Log of Salary")
hist(sqrt(train$salary),freq = F, main = "Square Root of Salary", xlab = "Square Root of Salary of Salary")
par(mfrow=c(1, 3))
hist(train1$`% of Cap`,freq = F, main = "% of Salary Cap", xlab = "% of Salary Cap")
hist(log(train1$`% of Cap`),freq = F, main = "Log of % of Salary Cap", xlab = "Log of % of Salary Cap")
hist(sqrt(train1$`% of Cap`),freq = F, main = "Square Root of S% of Salary Cap", xlab = "Square Root of % of Salary Cap")
par(mfrow=c(1,3))
hist(train$salary,freq = F, main = "Salary", xlab = "Salary")
hist(log(train$salary),freq = F, main = "Log of Salary", xlab = "Log of Salary")
hist(sqrt(train$salary),freq = F, main = "Square Root of Salary", xlab = "Square Root of Salary of Salary")
par(mfrow=c(1, 3))
hist(train1$`% of Cap`,freq = F, main = "% of Salary Cap", xlab = "% of Salary Cap")
hist(log(train1$`% of Cap`),freq = F, main = "Log of % of Salary Cap", xlab = "Log of % of Salary Cap")
hist(sqrt(train1$`% of Cap`),freq = F, main = "Square Root of % of Salary Cap", xlab = "Square Root of % of Salary Cap")
model1 = lm(salary~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
summary(model1)
plot(model1)
model11 = lm(`% of Salary`~., data = train1)
model11 = lm(`% of Cap`~., data = train1)
summary(model11)
model11 = lm(`% of Cap`~. , data = regular_train)
summary(model11)
model11 = lm(`% of Cap`~. , data = train)
model11 = lm(`% of Cap`~. , data = train1)
model11 = lm(`% of Cap`~. , data = regular_train)
summary(model11)
regular_stats_model = lm(`% of Cap`~. , data = regular_train)
summary(regular_stats_model)
advanced_stats_model = lm(`% of Cap`, data= advanced_train)
advanced_stats_model = lm(`% of Cap`, data= advanced_train)
regular_stats_model = lm(`% of Cap`~. , data = regular_train)
summary(regular_stats_model)
advanced_stats_model = lm(`% of Cap`, data= advanced_train)
regular_stats_model = lm(`% of Cap`~. , data = regular_train)
summary(regular_stats_model)
advanced_stats_model = lm(`% of Cap`~., data= advanced_train)
summary(advanced_stats_model)
total_model = lm(`% of Cap`~.-Name, data = big_data)
summary(total_model)
big_data
big_data
total_model = lm(`% of Cap`~.-(Name + Season + Team), data = big_data)
summary(total_model)
model1 = lm(salary~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
summary(model1)
plot(model1)
total_model = lm(`% of Cap`~.-(Name + Season + Team), data = big_data)
summary(total_model)
regular_stats_model = lm(`% of Cap`~. , data = regular_train)
summary(regular_stats_model)
advanced_stats_model = lm(`% of Cap`~., data= advanced_train)
summary(advanced_stats_model)
model1 = lm(salary~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
summary(model1)
total_model = lm(`% of Cap`~.-(Name + Team), data = big_data)
summary(total_model)
total_model = lm(`% of Cap`~.-(Name + Team + Season), data = big_data)
summary(total_model)
model2 = lm(log(salary)~ Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train)
summary(model2)
plot(model2)
total_model.log = lm(log(`% of Cap`)~.-(Name + Team + Season), data = big_data)
dsummary(total_model.log)
total_model.log = lm(log(`% of Cap`)~.-(Name + Team + Season), data = big_data)
summary(total_model.log)
total_model.sqrt = lm(sqrt(`% of Cap`)~.-(Name + Season + Team), data = big_data)
summary(total_model.sqrt)
regular_stats_model.log = lm(log(`% of Cap`)~. , data = regular_train)
summary(regular_stats_model.log)
advanced_stats_model.log = lm(log(`% of Cap`)~., data= advanced_train)
summary(advanced_stats_model.log)
regular_stats_model.sqrt = lm(sqrt(`% of Cap`)~. , data = regular_train)
summary(regular_stats_model.sqrt)
advanced_stats_model.sqrt = lm(sqrt(`% of Cap`)~., data= advanced_train)
summary(advanced_stats_model.sqrt)
advanced_stats_model.log = lm(log(`% of Cap`)~., data= advanced_train)
summary(advanced_stats_model.log)
total_model.log = lm(log(`% of Cap`)~.-(Name + Team + Season), data = big_data)
summary(total_model.log)
total_model = lm(`% of Cap`~.-(Name + Team + Season), data = big_data)
summary(total_model)
regular_stats_model = lm(`% of Cap`~. , data = regular_train)
summary(regular_stats_model)
train_PG1
train_PG1 =  train1[train1$Pos == "PG", ]
train_PF1 =  train1[train1$Pos == "PF", ]
train_SF1 =  train1[train1$Pos == "SF", ]
train_C1 = train1[train$Pos == "C", ]
train_PG1 =  train1[train1$Pos == "PG", ]
train_PF1 =  train1[train1$Pos == "PF", ]
train_SF1 =  train1[train1$Pos == "SF", ]
train_C1 = train1[train1$Pos == "C", ]
train_SG1 = train1[train1$Pos == "SG", ]
train_PG1
train_PG1
train_SG1 = train1[,train1$Pos == "SG"]
train_PG1 =  train1[,train1$Pos == "PG"]
train_PG1 =  train1[train1$Pos == "PG",]
train_PG1 =  train1[train1$Pos == 1,]
train_PF1 =  train1[train1$Pos == 2, ]
train_SF1 =  train1[train1$Pos == 3, ]
train_C1 = train1[train1$Pos == 4, ]
train_SG1 = train1[train1$Pos == 5, ]
train_PG1
test_PG1 =  test1[test1$Pos == 1, ]
test_PF1 =  test1[test1$Pos == 2, ]
test_SF1 =  test1[test1$Pos == 3, ]
test_C1 = test1[test1$Pos == 5, ]
test_SG1 = tes1t[test1$Pos == 4, ]
train_PG1 =  train1[train1$Pos == 1,]
train_PF1 =  train1[train1$Pos == 2, ]
train_SF1 =  train1[train1$Pos == 3, ]
train_C1 = train1[train1$Pos == 4, ]
train_SG1 = train1[train1$Pos == 5, ]
train_PG1
use_python("/usr/local/bin/python")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(reticulate)
install.package("reticulate")
install.packages("reticulate")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(reticulate)
use_python("/usr/local/bin/python")
use_python("/usr/local/bin/python")
use_python("/usr/local/bin/python3")
reticulate::repl_python()
vif(lm3)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(reticulate)
use_python("/usr/local/bin/python3")
reticulate::repl_python()
# NBA data from 1995-2017
big_data <- read_excel('data.xlsx')
big_data <- big_data[big_data[,"GP"] >= 30,]
big_data
data <- read.csv(file = 'final_dataset2.csv')
data = data[data[,"G"] >= 30,]      #screen out less statistically significant data points
data = data[data[,"Age"] >= 22,]    #salary cap
data_reduced = data[,c('X','Player', 'Pos', 'salary','Age','FG.','FT.','MPG','PPG','APG','RPG','TOPG','BPG','SPG')]
data_reduced = data_reduced[-c(which(data_reduced$Pos == "SF-SG")),]
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(salary)~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train2)
#AIC and Mallow's Cp select model yields the same model
library(leaps)
b = regsubsets(log(salary)~Age+FG.+FT.+MPG+PPG+APG+RPG+TOPG+BPG+SPG, data = train2)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(reticulate)
use_python("/usr/local/bin/python3")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(reticulate)
use_python("/usr/local/bin/python3")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(reticulate)
use_python("/usr/local/bin/python3")
reticulate::repl_python()
